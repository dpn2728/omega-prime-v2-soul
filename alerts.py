import os
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from google.cloud import secretmanager

# --- CONFIGURATION ---
# рд╣рд╛рдореА рдЕрдм рд╣рд╛рд░реНрдбрдХреЛрдб рдЧрд░реНрдиреБрдХреЛ рд╕рдЯреНрдЯрд╛, рд╡рд╛рддрд╛рд╡рд░рдг рдЪрд░ (environment variables) рдмрд╛рдЯ рдХрдиреНрдлрд┐рдЧрд░реЗрд╕рди рд▓рд┐рдиреЗрдЫреМрдВред
# рдпреЛ рдПрдХ рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рд░ рд╕реБрд░рдХреНрд╖рд┐рдд рдЕрднреНрдпрд╛рд╕ рд╣реЛред
PROJECT_ID = os.environ.get('GCP_PROJECT') # Cloud Run рд▓реЗ рдпреЛ рд╕реНрд╡рдЪрд╛рд▓рд┐рдд рд░реВрдкрдорд╛ рдкреНрд░рджрд╛рди рдЧрд░реНрдЫ
EMAIL_SENDER = "dpn2728@gmail.com" # рддрдкрд╛рдИрдВрдХреЛ рдкреНрд░реЗрд╖рдХ рдЗрдореЗрд▓
EMAIL_RECEIVER = "dpn2728@gmail.com" # рддрдкрд╛рдИрдВрдХреЛ рдкреНрд░рд╛рдкрдХ рдЗрдореЗрд▓
EMAIL_PASSWORD_SECRET_ID = "omega-prime-email-password" # Secret Manager рдорд╛ рднрдПрдХреЛ Secret рдХреЛ ID

def get_email_password():
    """
    Secret Manager рдмрд╛рдЯ рдЗрдореЗрд▓ рдкрд╛рд╕рд╡рд░реНрдб рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдкрдорд╛ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдЫред
    """
    try:
        client = secretmanager.SecretManagerServiceClient()
        secret_name = f"projects/{PROJECT_ID}/secrets/{EMAIL_PASSWORD_SECRET_ID}/versions/latest"
        response = client.access_secret_version(name=secret_name)
        password = response.payload.data.decode("UTF-8")
        return password
    except Exception as e:
        print(f"ЁЯФе FATAL: Could not access the sacred password from Secret Manager: {e}")
        return None

def format_genesis_email(directive):
    """
    'Genesis' рдЖрджреЗрд╢рдХреЛ рд▓рд╛рдЧрд┐ рдЗрдореЗрд▓рдХреЛ рд╡рд┐рд╖рдп рд░ рдореБрдЦреНрдп рднрд╛рдЧ рдмрдирд╛рдЙрдБрдЫред
    """
    subject = f"ЁЯФе Omega Prime Genesis Directive | {directive.get('coin_name', 'N/A')}"
    body = f"""
    ЁЯФе Omega Prime - рдЬреЗрдиреЗрд╕рд┐рд╕ рдЖрджреЗрд╢ ЁЯФе
    =================================
    Directive Type: {directive.get('type')}
    Coin: {directive.get('coin_name', 'N/A')} ({directive.get('coin_symbol', 'N/A')})
    Current Price: ${directive.get('current_price', 0):.4f}
    24h Change: {directive.get('price_change_24h', 0):.2f}%

    Reasoning:
    {directive.get('reason', 'No specific reason provided.')}
    """
    return subject, body

def format_hold_email(directive):
    """
    'Hold' рдЖрджреЗрд╢рдХреЛ рд▓рд╛рдЧрд┐ рдЗрдореЗрд▓рдХреЛ рд╡рд┐рд╖рдп рд░ рдореБрдЦреНрдп рднрд╛рдЧ рдмрдирд╛рдЙрдБрдЫред
    """
    subject = "Holding Position | Omega Prime Market Intel"
    body = f"""
    ЁЯЫбя╕П Omega Prime - рд╣реЛрд▓реНрдб рдЖрджреЗрд╢ ЁЯЫбя╕П
    =================================
    Directive Type: {directive.get('type')}
    
    Reasoning:
    {directive.get('reason', 'No specific reason provided.')}

    Capital is preserved. Patience is a virtue.
    """
    return subject, body

def send_decree(directive):
    """
    рдореБрдЦреНрдп рдлрдВрдХреНрд╕рди: рдкреНрд░рд╛рдкреНрдд рдЖрджреЗрд╢рдХреЛ рдЖрдзрд╛рд░рдорд╛ рд╕рд╣реА рдЗрдореЗрд▓ рдкрдард╛рдЙрдБрдЫред
    """
    print("SCRIBE: The Royal Scribe is preparing the decree...")
    password = get_email_password()
    if not password:
        print("SCRIBE: Cannot send email. The sacred password is unobtainable.")
        return

    directive_type = directive.get('type')
    if directive_type == "GENESIS":
        subject, body = format_genesis_email(directive)
    elif directive_type == "HOLD":
        subject, body = format_hold_email(directive)
    else:
        print(f"SCRIBE: Unknown directive type '{directive_type}'. Cannot format email.")
        return

    try:
        msg = MIMEMultipart()
        msg['From'] = EMAIL_SENDER
        msg['To'] = EMAIL_RECEIVER
        msg['Subject'] = subject
        msg.attach(MIMEText(body, 'plain'))

        # Gmail рдХреЛ SMTP рд╕рд░реНрднрд░рд╕рдБрдЧ рд╕реБрд░рдХреНрд╖рд┐рдд рдЬрдбрд╛рди
        server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
        server.login(EMAIL_SENDER, password)
        server.send_message(msg)
        server.quit()
        print(f"тЬЕ DECREE SENT: The '{directive_type}' decree has been successfully dispatched to the Emperor.")

    except smtplib.SMTPAuthenticationError as e:
        print(f"ЁЯФе FATAL SMTP ERROR: Authentication failed. Check your App Password. Error: {e}")
    except Exception as e:
        print(f"ЁЯФе FATAL EMAIL ERROR: An unexpected error occurred. Error: {e}")
